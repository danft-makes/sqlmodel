Syntax Check: ('SELECT city FROM branch WHERE manager_id IN (SELECT manager_id FROM manager);\n',), Classification: ('SELECT city FROM branch WHERE manager_id IN (SELECT manager_id FROM manager);\n',)
Syntax Check: ("SELECT AVG(total_price) FROM sales WHERE sale_date BETWEEN '2023-01-01' AND '2023-04-01';\n",), Classification: ("SELECT AVG(total_price) FROM sales WHERE sale_date BETWEEN '2023-01-01' AND '2023-04-01';\n",)
Syntax Check: ("SELECT customer.name FROM customer WHERE customer.rfm_class IN ('Em Risco','Esfriando','Nao pode perder');\n",), Classification: ("SELECT customer.name FROM customer WHERE customer.rfm_class IN ('Em Risco','Esfriando','Nao pode perder');\n",)
Syntax Check: ("SELECT city FROM customer WHERE rfm_class IN ('Em Risco', 'Esfriando', 'Nao pode perder');",), Classification: ("SELECT city FROM customer WHERE rfm_class IN ('Em Risco', 'Esfriando', 'Nao pode perder');",)
Syntax Check: ('CREATE TABLE sales (\n    sale_id INTEGER PRIMARY KEY,\n    sale_date DATE NOT NULL,\n    quantity REAL NOT NULL,\n    total_price REAL NOT NULL,\n    customer_id INTEGER NOT NULL,\n    branch_id INTEGER NOT NULL,\n    product_id INTEGER NOT NULL\n);\n\nCREATE TABLE customer (\n    customer_id INTEGER PRIMARY KEY,\n    creation_date DATE NOT NULL,\n    rfm_class TEXT NOT NULL,\n    name TEXT NOT NULL,\n    phone TEXT NOT NULL,\n    last_purchase_date DATE NOT NULL,\n    city TEXT',), Classification: ('CREATE TABLE sales (\n    sale_id INTEGER PRIMARY KEY,\n    sale_date DATE NOT NULL,\n    quantity REAL NOT NULL,\n    total_price REAL NOT NULL,\n    customer_id INTEGER NOT NULL,\n    branch_id INTEGER NOT NULL,\n    product_id INTEGER NOT NULL\n);\n\nCREATE TABLE customer (\n    customer_id INTEGER PRIMARY KEY,\n    creation_date DATE NOT NULL,\n    rfm_class TEXT NOT NULL,\n    name TEXT NOT NULL,\n    phone TEXT NOT NULL,\n    last_purchase_date DATE NOT NULL,\n    city TEXT',)
Syntax Check: ("SELECT customer.customer_id, customer.name \nFROM customer \nWHERE customer.rfm_class IN ('Em Risco', 'Esfriando', 'Nao pode perder');",), Classification: ("SELECT customer.customer_id, customer.name \nFROM customer \nWHERE customer.rfm_class IN ('Em Risco', 'Esfriando', 'Nao pode perder');",)
Syntax Check: ('SELECT city, COUNT(DISTINCT customer_id) as num_clients FROM customer GROUP BY city ORDER BY num_clients DESC; ',), Classification: ('SELECT city, COUNT(DISTINCT customer_id) as num_clients FROM customer GROUP BY city ORDER BY num_clients DESC; ',)
Syntax Check: ("SELECT SUM(CASE \r\n    WHEN strftime('%m', sale_date) BETWEEN '01' AND '03' THEN total_price\r\n    ELSE 0\r\nEND) AS primeiro_trimestre,\r\nSUM(CASE \r\n    WHEN strftime('%m', sale_date) BETWEEN '04' AND '06' THEN total_price\r\n    ELSE 0\r\nEND) AS segundo_trimestre,\r\nSUM(CASE \r\n    WHEN strftime('%m', sale_date) BETWEEN '07",), Classification: ("SELECT SUM(CASE \r\n    WHEN strftime('%m', sale_date) BETWEEN '01' AND '03' THEN total_price\r\n    ELSE 0\r\nEND) AS primeiro_trimestre,\r\nSUM(CASE \r\n    WHEN strftime('%m', sale_date) BETWEEN '04' AND '06' THEN total_price\r\n    ELSE 0\r\nEND) AS segundo_trimestre,\r\nSUM(CASE \r\n    WHEN strftime('%m', sale_date) BETWEEN '07",)
Syntax Check: ("SELECT customer.name, customer.phone, customer.city \nFROM customer \nWHERE customer.rfm_class IN ('Em Risco','Esfriando','Nao pode perder') ",), Classification: ("SELECT customer.name, customer.phone, customer.city \nFROM customer \nWHERE customer.rfm_class IN ('Em Risco','Esfriando','Nao pode perder') ",)
Syntax Check: ('SELECT city FROM customer GROUP BY city ORDER BY COUNT(*) DESC;',), Classification: ('SELECT city FROM customer GROUP BY city ORDER BY COUNT(*) DESC;',)
Syntax Check: ('SELECT SUM(total_price) AS total_vendas, EXTRACT(YEAR FROM sale_date) AS ano, EXTRACT(QUARTER FROM sale_date) AS trimestre\nFROM sales\nWHERE EXTRACT(YEAR FROM sale_date) = 2023 AND EXTRACT(QUARTER FROM sale_date) IN (1, 4)\nGROUP BY EXTRACT(YEAR FROM sale_date), EXTRACT(QUARTER FROM sale_date)\nORDER BY EXTRACT(YEAR FROM sale_',), Classification: ('SELECT SUM(total_price) AS total_vendas, EXTRACT(YEAR FROM sale_date) AS ano, EXTRACT(QUARTER FROM sale_date) AS trimestre\nFROM sales\nWHERE EXTRACT(YEAR FROM sale_date) = 2023 AND EXTRACT(QUARTER FROM sale_date) IN (1, 4)\nGROUP BY EXTRACT(YEAR FROM sale_date), EXTRACT(QUARTER FROM sale_date)\nORDER BY EXTRACT(YEAR FROM sale_',)
Syntax Check: ("SELECT customer_id, name, phone, last_purchase_date, city\nFROM customer\nWHERE rfm_class IN ('Em Risco', 'Esfriando', 'Nao pode perder')\nORDER BY last_purchase_date;",), Classification: ("SELECT customer_id, name, phone, last_purchase_date, city\nFROM customer\nWHERE rfm_class IN ('Em Risco', 'Esfriando', 'Nao pode perder')\nORDER BY last_purchase_date;",)
Syntax Check: (' SELECT city, COUNT(*) AS num_customers \nFROM customer\nGROUP BY city\nORDER BY num_customers DESC;',), Classification: (' SELECT city, COUNT(*) AS num_customers \nFROM customer\nGROUP BY city\nORDER BY num_customers DESC;',)
Syntax Check: (" To answer this question, we need to compare the total sales revenue between the first and fourth quarters of 2023. However, without the actual data in the 'sales' table, I cannot provide an exact comparison. Please provide the necessary data or update the 'sales' table with the required information.",), Classification: (" To answer this question, we need to compare the total sales revenue between the first and fourth quarters of 2023. However, without the actual data in the 'sales' table, I cannot provide an exact comparison. Please provide the necessary data or update the 'sales' table with the required information.",)
Syntax Check: (" I don't know",), Classification: (" I don't know",)
